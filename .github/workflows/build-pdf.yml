name: pdf-build

on:
  release:
    type:
      - published 
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-pdf:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: "x64"

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install LaTeX
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended texlive-lang-italian texlive-lang-english latexmk texlive-pictures texlive-font-utils ghostscript poppler-utils imagemagick netpbm texlive-base texlive-binaries

      - name: Install Graphviz
        run: |
          sudo apt-get install -y graphviz

      - name: Install Python dependencies
        run: |
          python -m pip install -r requirements-dev.txt
          # Install svglib for svg to pdf conversion
          python -m pip install svglib

      # - name: Generate LaTeX files for Italian docs
      #   run: |
      #     sphinx-build -b latex docs/it/ build/latex/it

      - name: Generate LaTeX files and build
        run: |
          sphinx-build -b latex docs/en/ build/latex/en
          cd build/latex/en
          latexmk -pdf technical-docs.tex

      # - name: Build LaTeX and PDF for Italian docs
      #   uses: xu-cheng/latex-action@v3
      #   with:
      #     root_file: technical-docs.tex
      #     working_directory: build/latex/it
      #     extra_system_packages: "ghostscript poppler-utils imagemagick netpbm inkscape"

      # - name: Build LaTeX and PDF for English docs
      #   uses: xu-cheng/latex-action@v3
      #   with:
      #     root_file: technical-docs.tex
      #     pre_compile: "sphinx-build -b latex docs/en/ build/latex/en"
      #     working_directory: build/latex/en
      #     extra_system_packages: "ghostscript poppler-utils imagemagick netpbm inkscape"

      - name: Create PDF directory
        run: |
          mkdir -p pdf_output
          # cp build/latex/it/technical-docs.pdf pdf_output/technical-docs-it.pdf
          cp build/latex/en/technical-docs.pdf pdf_output/technical-docs-en.pdf
      
      # - name: Deploy PDFs to PDF branch
      #   if: success()
      #   run: |
      #     git config --global user.name "GitHub Actions"
      #     git config --global user.email "actions@github.com"
          
      #     # Create a new branch or use existing one
      #     git checkout -b pdf-output || git checkout pdf-output
          
      #     # Copy the PDFs to a folder in this branch
      #     mkdir -p pdf-artifacts
      #     cp pdf_output/*.pdf pdf-artifacts/
          
      #     # Add timestamp to filenames
      #     TIMESTAMP=$(date +%Y%m%d-%H%M%S)
      #     for file in pdf-artifacts/*.pdf; do
      #       base=$(basename "$file" .pdf)
      #       mv "$file" "pdf-artifacts/${base}-${TIMESTAMP}.pdf"
      #     done
          
      #     # Add, commit and push
      #     git add pdf-artifacts/
      #     git commit -m "Update PDF documentation - ${TIMESTAMP}"
      #     git push -f origin pdf-output

      - name: Upload PDFs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation-pdf
          path: pdf_output/*.pdf
