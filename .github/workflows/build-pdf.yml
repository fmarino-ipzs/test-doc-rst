name: pdf-build

on:
  release:
    types:
      - published 
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-pdf:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: "x64"

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install LaTeX and deps
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended texlive-lang-italian texlive-lang-english latexmk texlive-pictures texlive-font-utils ghostscript poppler-utils imagemagick netpbm texlive-base texlive-binaries graphviz

      - name: Install Python dependencies
        run: |
          python -m pip install -r requirements-dev.txt

      - name: Append tags to document title
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAG="${{ github.event.release.tag_name }}"
            sed -i 's/\(settings_project_name = ".*\)"/\1 - Release '"${TAG}"'"/' docs/it/conf.py
            sed -i 's/\(settings_project_name = ".*\)"/\1 - Release '"${TAG}"'"/' docs/en/conf.py
          else
            # this is fo workflow_dispatch, we don't change the title
            echo "Using default title for main branch"
            sed -i 's/\(settings_project_name = ".*\)"/\1 - Versione Corrente"/' docs/it/conf.py
            sed -i 's/\(settings_project_name = ".*\)"/\1 - Editor'"'"'s Copy"/' docs/en/conf.py
          fi

      - name: Generate LaTeX files and build en version
        run: |
          sphinx-build -b latex docs/en/ build/latex/en
          cd build/latex/en
          latexmk -pdf technical-docs.tex

      # - name: Generate LaTeX files and build it version
      #   run: |
      #     sphinx-build -b latex docs/it/ build/latex/it
      #     cd build/latex/it
      #     latexmk -pdf technical-docs.tex

      - name: Create PDF directory
        run: |
          mkdir -p pdf_output
          
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          
          # cp build/latex/it/technical-docs.pdf pdf_output/technical-docs-it-${TIMESTAMP}.pdf
          cp build/latex/en/technical-docs.pdf pdf_output/technical-docs-en-${TIMESTAMP}.pdf

      - name: Upload PDFs as artifact
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: documentation-pdf
          path: pdf_output/*.pdf

      - name: Upload Release Asset
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: pdf_output/*.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}