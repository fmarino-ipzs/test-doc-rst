name: Manual PR Preview

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request Number to build preview for'
        required: true

env:
  DEFAULT_BRANCH: versione-corrente

jobs:
  build-and-index:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ github.event.inputs.pr_number }}/head

      # Install Python
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: "x64"

      # Install Java
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Install Graphviz required for plantuml
      - name: Install Graphviz
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      # Install python dependencies
      - name: Install deps
        run: |-
          python -m pip install -r requirements-dev.txt
          python -m pip install Jinja2==3.1.6

      - name: Set deployment path
        id: deployment
        run: |
          echo "path=prs/pr${{ github.event.inputs.pr_number }}" >> $GITHUB_OUTPUT

      # Run Sphinx build for HTML output
      - name: Build branch
        run: |-
          # Create output directories
          mkdir -p "html/${{ steps.deployment.outputs.path }}/it"
          mkdir -p "html/${{ steps.deployment.outputs.path }}/en"

          echo "Building html/${{ steps.deployment.outputs.path }}/it"
          echo "Building html/${{ steps.deployment.outputs.path }}/en"

          sphinx-build -b html docs/it/ html/${{ steps.deployment.outputs.path }}/it
          sphinx-build -b html docs/en/ html/${{ steps.deployment.outputs.path }}/en

      - name: Copy python scripts for deploy
        run: |
          mkdir -p html/scripts/ && cp -r .github/scripts/* html/scripts/
          mkdir -p html/templates/ && cp -r .github/templates/* html/templates/
          mkdir -p html/static/ && cp -r .github/static/* html/static/

      # Prima eseguiamo il checkout del branch gh-pages per aggiungervi le nuove build
      - name: Checkout gh-pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: gh-pages-branch  # Checkout in una sottodirectory

      # Copiamo i contenuti costruiti nella sottodirectory gh-pages
      - name: Copy new content to gh-pages
        run: |
          rsync -av html/ gh-pages-branch/
          cd gh-pages-branch
          
          # Esegui i script Python per aggiornare index e pulire PR vecchie
          python ./scripts/cleanup_old_prs.py
          python ./scripts/generate_index.py
          
          # Configuriamo git
          git config --local user.name 'GitHub Actions'
          git config --local user.email 'actions@github.com'
          
          # Aggiungiamo i file modificati e facciamo commit
          git add .
          git commit -m "Update documentation and regenerate index"
          git push

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = ${{ github.event.inputs.pr_number }};
            const repoUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}`;
            const previewUrl = `${repoUrl}/prs/pr${prNumber}/`;
            
            const comment = `âœ… Preview for this PR has been manually generated and is available here: 
            - English Version --> ${previewUrl}en/
            - Italian Version --> ${previewUrl}it/`;
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });
